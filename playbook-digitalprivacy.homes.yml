---
# Start playbook: ansible-playbook playbook-digitalprivacy.homes.yml --ask-pass 
## Add --ask-vault-pass if necessary.
- name: Harden and installs all services on your Debian server
  become: true
  hosts: digitalprivacy.homes

  pre_tasks:
    - name: Creates the folder ~/.ssh
      become: false
      ansible.builtin.file:
        path: "~/.ssh"
        state: directory
      delegate_to: localhost
    - name: Generate an OpenSSH keypair
      become: false
      community.crypto.openssh_keypair:
        path: "~/.ssh/{{ inventory_hostname }}_ed25519"
        type: "ed25519"
      delegate_to: localhost
    # (!?) Can't be used: gather facts needs to be possible to use variables. 
    # Maybe another idea comes up to implement this here instead of the script `install_ansible_on_workstation.sh`
    # - name: Add server to the ssh configuration
    #   become: false
    #   community.general.ssh_config:
    #     user: "{{ ansible_user }}"
    #     host: "{{ inventory_hostname }}"
    #     hostname: "{{ ansible_default_ipv4.address }}"
    #     identity_file: "~/.ssh/{{ inventory_hostname }}_ed25519"
    #     port: '{{ ansible_port }}'
    #     state: present
    #   delegate_to: localhost
    - name: Copy pub key to new server for ansible to work properly especialy after ssh_hardening.
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        manage_dir: true
        key: "{{ lookup('file', '~/.ssh/{{ inventory_hostname }}_ed25519.pub') }}"

  # Don't move the roles around. The order is important (packages, tor & reboot).
  roles:
    - digitalprivacy_homes.server.packages
    # dev-sec. These two roles are from https://github.com/dev-sec/ansible-collection-hardening/
    - devsec.hardening.ssh_hardening
    - devsec.hardening.os_hardening
    # dev-sec END
    - digitalprivacy_homes.server.reboot
    - digitalprivacy_homes.server.unattended_upgrades
    - digitalprivacy_homes.server.tor
    - digitalprivacy_homes.server.digitalprivacy
    - digitalprivacy_homes.server.unbound
    - digitalprivacy_homes.server.firewalld
    - digitalprivacy_homes.server.logrotate
    - digitalprivacy_homes.server.nginx
    - digitalprivacy_homes.server.adguardhome
    - digitalprivacy_homes.server.cockpit
    - digitalprivacy_homes.server.docker
    - digitalprivacy_homes.server.portainer
    - digitalprivacy_homes.server.searxng
    - digitalprivacy_homes.server.vaultwarden
    - digitalprivacy_homes.server.desec
    - digitalprivacy_homes.server.wg_easy
    - digitalprivacy_homes.server.nextcloud

  post_tasks:
    - name: You'll need to follow the setup for Nextcloud manually.
      ansible.builtin.debug:
        msg: "Go to https://{{ ansible_default_ipv4.address|default(ansible_all_ipv4_addresses[0]) }}:8080 and finish the setup (accept the risk in your browser). Use 'nextcloud.digitalprivacy.homes' as your domain."
