---
- name: Install apt-transport-tor package before installing tor to be able to use tor onion source.list. Also installs torsocks if oniux fails and python3-debian for the right Ansible Python interpreter.
  ansible.builtin.package:
    update_cache: true
    name: 
      - apt-transport-tor
      - torsocks
      - python3-debian
    state: present

- name: Install oniux.
  include_tasks: oniux.yml
  with_items: "{{ tor | default() }}"
  when: item.install_oniux | default('false') | bool
  
- name: Add tor apt repository key.
  ansible.builtin.get_url:
    url: https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc
    dest: /etc/apt/trusted.gpg.d/deb.torproject.org-keyring.gpg
    mode: '0644'

- name: Add tor repo
  ansible.builtin.deb822_repository:
    name: tor
    types: ["deb", "deb-src"]
    uris: tor+http://apow7mjfryruh65chtdydfmqfpj5btws7nbocgtaovhvezgccyjazpqd.onion/torproject.org
    suites: "{{ ansible_distribution_release }}"
    components: main
    signed_by: /etc/apt/trusted.gpg.d/deb.torproject.org-keyring.gpg
    enabled: true

- name: Install tor.
  ansible.builtin.package:
    update_cache: true
    name: 
      - tor
      - deb.torproject.org-keyring
    state: present

- name: Add debian.sources tor list (/etc/apt/sources.list.d/debian.sources)
  ansible.builtin.template:
    src: templates/debians-default_tor_list.j2
    dest: /etc/apt/sources.list.d/debian.sources
    owner: root
    group: root
    mode: '0644'
  loop_control:
    loop_var: "{{ tor | default() }}"

- name: Moves the debians /etc/apt/sources.list file to /etc/apt/sources.list.backup
  command: mv /etc/apt/sources.list /etc/apt/sources.list.backup
  args:
    creates: /etc/apt/sources.list.backup
