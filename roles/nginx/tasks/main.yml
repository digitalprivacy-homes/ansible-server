---
- name: Install nginx, nginx-mod-brotli
  ansible.builtin.package:
    update_cache: true
    name: 
      - "nginx"
      - "libnginx-mod-http-brotli-filter"
      - "libnginx-mod-http-brotli-static"
    state: present

- name: Copy nginx.conf.j2 to /etc/nginx/nginx.conf
  ansible.builtin.template:
    src: "templates/nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    owner: "root"
    group: "root"
    mode: '0644'
  notify:
    - Restart nginx

- name: Create directory ssl. 
  ansible.builtin.file:
    path: /etc/nginx/ssl
    state: directory
    owner: "root"
    group: "root"
    mode: '0600'

# Create dhparam yourself
# - name: Generate Diffie-Hellman parameters with the default size (4096 bits)
#   community.crypto.openssl_dhparam:
#     path: /etc/nginx/ssl/dhparam.pem
#     owner: "root"
#     group: "root"
#     mode: '0600'

- name: Copy ffdhe4096.pem file.
  ansible.builtin.copy:
    src: "files/ffdhe4096.pem"
    dest: "/etc/nginx/ssl/dhparam.pem"
    owner: "root"
    group: "root"
    mode: '0600'

- name: Copy ssl-options.conf file.
  ansible.builtin.copy:
    src: "files/ssl-options.conf"
    dest: "/etc/nginx/ssl/ssl-options.conf"
    owner: "root"
    group: "root"
    mode: '0600'

- name: Download certificates via `digitalprivacy-update_certificates.sh` script (role).
  ansible.builtin.shell: /usr/local/bin/digitalprivacy-update_certificates
  notify:
    - Restart nginx

- name: Delete the default file and symbolic link
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
      - /etc/nginx/sites-enabled/default
      - /etc/nginx/sites-available/default


- name: Enable nginx.service, start and ensure it is not masked
  ansible.builtin.systemd:
    name: nginx.service
    enabled: true
    state: started
    masked: no

- name: Make sure nginx.service unit is running
  ansible.builtin.systemd:
    state: started
    name: nginx
